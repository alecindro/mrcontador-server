CREATE OR REPLACE FUNCTION ${schema}.processa_comprovantebb("pPAR_CODIGO" int8, "pAGE_CODIGO" int8, "pEXT_CODIGO" int8)
 RETURNS numeric
 LANGUAGE plpgsql
AS $function$
DECLARE
  pPAR_CODIGO ALIAS FOR $1;  
  pAGE_CODIGO ALIAS FOR $2;  
  pCOM_CODIGO ALIAS FOR $3;  

  
  
  vRETORNO NUMERIC;
  vCODIGEXTRATO NUMERIC;
  vDATAEXTRATO DATE;  
  vHISTORICO VARCHAR(150);
  vINFOADICIONAL VARCHAR(240);
  vNUMERODOCUMENTO VARCHAR(35);
  vNUMEROCONTROLE VARCHAR(35);
  vDESCRICAO VARCHAR(30);
  vDEBITO NUMERIC;
  vCREDITO NUMERIC;
  REC   RECORD;
 
  
  vCNPJ TEXT;
  vBENEFICIARIO TEXT;
  vCOMPROVANTE NUMERIC;
  vDATAVENCIMENTO DATE;  
  vDATAPAGAMENTO DATE;
  vVALORDOCUMENTO NUMERIC;
  vVALORPAGAMENTO NUMERIC;
  vVALORDIFERENTE NUMERIC;
  
  

  vCODIGOCONTABIL NUMERIC;
  vCODIGOEXTRA NUMERIC;
  vCODIGOINTELIGENTE NUMERIC;

  vHISTORICOFINAL TEXT;
  vCODIGONOTA NUMERIC;
  vNIVEL NUMERIC;
  vASSOCIADO BOOLEAN;
  vDETALHECOMP TEXT;  


  
  
  cEXTRATOBANCARIO CURSOR FOR
  SELECT COMPROVANTE.ID, COM_DOCUMENTO, COM_CNPJ, COM_BENEFICIARIO, COM_DATAVENCIMENTO, COM_VALORDOCUMENTO, COM_VALORPAGAMENTO, COM_DATAPAGAMENTO    
  FROM DS_DEMO.COMPROVANTE
  WHERE PARCEIRO_ID= pPAR_CODIGO
    AND AGENCIABANCARIA_ID= pAGE_CODIGO
    AND COMPROVANTE.ID= pCOM_CODIGO
  ;  

  
BEGIN
 
  vRETORNO:= 0;

  OPEN cEXTRATOBANCARIO;
  LOOP
  FETCH cEXTRATOBANCARIO INTO vCOMPROVANTE, vDETALHECOMP, vCNPJ, vBENEFICIARIO, vDATAVENCIMENTO, vVALORDOCUMENTO, vVALORPAGAMENTO, vDATAPAGAMENTO;
  EXIT WHEN NOT FOUND;

   vCODIGOCONTABIL := 0;

   vHISTORICOFINAL := '';
   vCODIGONOTA     := 0;   
   vNIVEL          := 0;  
   vASSOCIADO      := FALSE;  

        
   FOR REC IN
    SELECT  DISTINCT EXTRATO.ID, EXT_DATALANCAMENTO, EXT_HISTORICO, EXT_NUMERODOCUMENTO, EXT_NUMEROCONTROLE, EXT_DESCRICAO, EXT_DEBITO, EXT_CREDITO, INFO_ADICIONAL, INTELIGENT.ID
    FROM DS_DEMO.EXTRATO
     INNER JOIN DS_DEMO.INTELIGENT ON INTELIGENT.EXTRATO_ID=EXTRATO.ID
    WHERE EXTRATO.PARCEIRO_ID= pPAR_CODIGO
      AND EXTRATO.AGENCIABANCARIA_ID= pAGE_CODIGO
      AND ASSOCIADO= FALSE
      AND COALESCE(INTELIGENT.COMPROVANTE_ID,0) = 0    
    ORDER BY EXTRATO.ID 
   LOOP

   vCODIGEXTRATO     := REC.EXTRATO.ID; 
   vDATAEXTRATO      := REC.EXT_DATALANCAMENTO; 
   vHISTORICO        := REC.EXT_HISTORICO;
   vNUMERODOCUMENTO  := REC.EXT_NUMERODOCUMENTO; 
   vNUMEROCONTROLE   := REC.EXT_NUMEROCONTROLE;
   vDESCRICAO        := REC.EXT_DESCRICAO; 
   vDEBITO           := REC.EXT_DEBITO; 
   vCREDITO          := REC.EXT_CREDITO; 
   vINFOADICIONAL    := REC.INFO_ADICIONAL; 
   vCODIGOINTELIGENTE:= REC.INTELIGENT.ID;


   IF vDEBITO < 0 THEN
    vDEBITO:= vDEBITO * (-1);
   END IF;

   SELECT trim(leading '0' from (replace(vNUMERODOCUMENTO, '.', ''))) 
    INTO vNUMERODOCUMENTO;


   SELECT trim(leading '0' from (replace(vDETALHECOMP, '.', ''))) 
     INTO vDETALHECOMP;
        
    IF (vDETALHECOMP = vNUMERODOCUMENTO) AND (vDATAPAGAMENTO = vDATAEXTRATO) AND (vVALORPAGAMENTO = vDEBITO ) THEN

     SELECT replace(vCNPJ, '.', '')
     INTO vCNPJ;
     SELECT replace(vCNPJ, '/', '')
     INTO vCNPJ;
     SELECT replace(vCNPJ, '-', '')
     INTO vCNPJ;
     

     UPDATE DS_DEMO.INTELIGENT SET COMPROVANTE_ID= vCOMPROVANTE,
                                   CNPJ= vCNPJ, 
                                   BENEFICIARIO= vBENEFICIARIO
     WHERE ID = vCODIGOINTELIGENTE;

      
    END IF;
   END LOOP; 


   
  vRETORNO:= vRETORNO + 1;
  END LOOP;
  CLOSE cEXTRATOBANCARIO;
  

  RETURN COALESCE(vRETORNO ,0);

END;
$function$
;
