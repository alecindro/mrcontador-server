CREATE OR REPLACE FUNCTION ${schema}.processa_inteligente("pPAR_CODIGO" numeric, "pAGE_CODIGO" numeric, "pDATAINICIO" date, "pDATAFIM" date)
 RETURNS numeric
 LANGUAGE plpgsql AS $FUNCTION$
DECLARE
  pPAR_CODIGO ALIAS FOR $1;  
  pAGE_CODIGO ALIAS FOR $2;  
  pDATAINICIO ALIAS FOR $3;
  pDATAFIM    ALIAS FOR $4; 
  vRETORNO NUMERIC;
  vCODIGEXTRATO NUMERIC;
  vDATAEXTRATO DATE;  
  vHISTORICO VARCHAR(150);
  vNUMERODOCUMENTO VARCHAR(35);
  vNUMEROCONTROLE VARCHAR(35);
  vDESCRICAO VARCHAR(30);
  vDEBITO NUMERIC;
  vCREDITO NUMERIC;
  REC   RECORD;
  RNOTA RECORD;
  RREGRA RECORD; 
  vDETALHECOMP TEXT;
  vCNPJ TEXT;
  vBENEFICIARIO TEXT;
  vCOMPROVANTE NUMERIC;
  vDATAVENCIMENTO DATE;  
  vVALORDOCUMENTO NUMERIC;
  vCODIGOCONTABIL NUMERIC;
  vCODIGOEXTRA NUMERIC;
  vHISTORICOFINAL TEXT;
  vCODIGONOTA NUMERIC;
  vNIVEL NUMERIC;

  cEXTRATOBANCARIO CURSOR FOR
  SELECT ID, EXT_DATALANCAMENTO, EXT_HISTORICO, EXT_NUMERODOCUMENTO, EXT_NUMEROCONTROLE, EXT_DESCRICAO, EXT_DEBITO, EXT_CREDITO
  FROM ${schema}.EXTRATO
  WHERE PARCEIRO_ID= pPAR_CODIGO
    AND AGENCIABANCARIA_ID= pAGE_CODIGO
    AND EXT_DATALANCAMENTO >= pDATAINICIO
    AND EXT_DATALANCAMENTO <= pDATAFIM
  ORDER BY ID ;  

BEGIN
  vRETORNO:= 0;

  DELETE FROM ${schema}.INTELIGENT
  WHERE parceiro_id= pPAR_CODIGO
    AND agenciabancaria_id= pAGE_CODIGO
    AND datalancamento >= pDATAINICIO
    AND datalancamento <= pDATAFIM;

  OPEN cEXTRATOBANCARIO;
  LOOP
  FETCH cEXTRATOBANCARIO INTO vCODIGEXTRATO, vDATAEXTRATO, vHISTORICO, vNUMERODOCUMENTO, vNUMEROCONTROLE, vDESCRICAO, vDEBITO, vCREDITO;
  EXIT WHEN NOT FOUND;

  IF vDEBITO < 0 THEN
   vDEBITO:= vDEBITO * (-1);
  END IF;

   vCOMPROVANTE   := 0;
   vCNPJ          := '';
   vBENEFICIARIO  := '';  
   vCODIGOCONTABIL:= 0;

   vHISTORICOFINAL:= '';
   vCODIGONOTA    := 0;  
   vNIVEL         := 0;    
   
     
   FOR REC IN
   SELECT *
   FROM ${schema}.COMPROVANTE
   WHERE PARCEIRO_ID= pPAR_CODIGO
     AND AGENCIABANCARIA_ID= pAGE_CODIGO
     AND COM_DATAPAGAMENTO >= vDATAEXTRATO
     AND COM_DATAPAGAMENTO <= vDATAEXTRATO
   LOOP
    vDETALHECOMP:= REC.COM_DOCUMENTO;    
    SELECT replace(vDETALHECOMP, '.', '')
     INTO vDETALHECOMP;

    IF (vDETALHECOMP = vNUMERODOCUMENTO) AND (REC.COM_DATAPAGAMENTO = vDATAEXTRATO) AND (REC.COM_VALORPAGAMENTO = vDEBITO ) THEN

     vCNPJ          := REC.COM_CNPJ;
     SELECT replace(vCNPJ, '.', '')
     INTO vCNPJ;
     SELECT replace(vCNPJ, '/', '')
     INTO vCNPJ;
     SELECT replace(vCNPJ, '-', '')
     INTO vCNPJ;
     
     vBENEFICIARIO  := REC.COM_BENEFICIARIO;
     vCOMPROVANTE   := REC.ID;
     vDATAVENCIMENTO:= REC.COM_DATAVENCIMENTO;  
     vVALORDOCUMENTO:= REC.COM_VALORDOCUMENTO;
     

    END IF;
   END LOOP;

   IF vCNPJ <> '' THEN
       SELECT CON_CONTA
     INTO vCODIGOCONTABIL
    FROM ${schema}.CONTA  
    WHERE PARCEIRO_ID= pPAR_CODIGO
      AND TRIM(CON_CNPJ) = TRIM(vCNPJ)
      AND CON_CNPJ <> '';
 
    FOR RNOTA IN
    SELECT *
    FROM ${schema}.NOTAFISCAL  
    WHERE ID>0 AND TNO_CODIGO=1
     AND PARCEIRO_ID= pPAR_CODIGO
     AND TRIM(NOT_CNPJ) = TRIM(vCNPJ)
    LOOP
     IF (RNOTA.NOT_DATAPARCELA = vDATAVENCIMENTO) AND (RNOTA.NOT_VALORPARCELA = vVALORDOCUMENTO) THEN
      vHISTORICOFINAL   := 'Pagto. NFe '|| RNOTA.NOT_NUMERO || '/' || RNOTA.NOT_PARCELA || ' de ' || RNOTA.NOT_EMPRESA;
      vCODIGONOTA       := RNOTA.ID;  
      vNIVEL       := 1;        

     END IF;

    END LOOP;

   END IF;  

   IF (vNIVEL = 0) THEN
    FOR RREGRA IN
    SELECT *
    FROM ${schema}.REGRA
    WHERE PAR_CODIGO= pPAR_CODIGO
    LOOP
     IF (RREGRA.REG_DESCRICAO = vHISTORICO) OR (RREGRA.REG_DESCRICAO = vBENEFICIARIO) THEN
      vCODIGOCONTABIL := RREGRA.REG_CONTA;
      vHISTORICOFINAL := RREGRA.REG_HISTORICO;
      vNIVEL          := 2;
     END IF;  

    END LOOP;
   
   END IF;  

   
  INSERT INTO ${schema}.INTELIGENT ( extrato_id, parceiro_id, agenciabancaria_id, datainicio, datafim, datalancamento,
                                       historico, NUMERODOCUMENTO, NUMEROCONTROLE, DEBITO, CREDITO, comprovante_id,
                                       CNPJ, BENEFICIARIO, conta_id, notafical_id, HISTORICOFINAL, periodo
                                      )
                              VALUES ( vCODIGEXTRATO, pPAR_CODIGO, pAGE_CODIGO, pDATAINICIO, pDATAFIM, vDATAEXTRATO,
                                       vHISTORICO, vNUMERODOCUMENTO, vNUMEROCONTROLE, vDEBITO, vCREDITO, vCOMPROVANTE,
                                       vCNPJ, vBENEFICIARIO, vCODIGOCONTABIL, vCODIGONOTA, vHISTORICOFINAL, concat(extract(month from vDATAEXTRATO),extract(year from vDATAEXTRATO))
                                     );     

  vRETORNO:= vRETORNO + 1;
  END LOOP;
  CLOSE cEXTRATOBANCARIO;
 

  RETURN COALESCE(vRETORNO ,0);

END;
$FUNCTION$;

