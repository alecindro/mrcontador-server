CREATE OR REPLACE FUNCTION ds_demo.processa_extratobb("pPAR_CODIGO" bigint, "pAGE_CODIGO" bigint, "pEXT_CODIGO" bigint)
 RETURNS numeric
 LANGUAGE plpgsql
AS $function$
DECLARE
  pPAR_CODIGO ALIAS FOR $1;  
  pAGE_CODIGO ALIAS FOR $2;  
  pEXT_CODIGO ALIAS FOR $3;  
  
  vRETORNO NUMERIC;
  vCODIGEXTRATO NUMERIC;
  vDATAEXTRATO DATE;  
  vHISTORICO VARCHAR(150);
  vNUMERODOCUMENTO VARCHAR(35);
  vNUMEROCONTROLE VARCHAR(35);
  vDESCRICAO VARCHAR(30);
  vDEBITO NUMERIC;
  vCREDITO NUMERIC;
  vASSOCIADO BOOLEAN;
   
  cEXTRATOBANCARIO CURSOR FOR
  SELECT  DISTINCT EXTRATO.ID, EXT_DATALANCAMENTO, EXT_HISTORICO, EXT_NUMERODOCUMENTO, EXT_NUMEROCONTROLE, EXT_DESCRICAO, EXT_DEBITO, EXT_CREDITO
  FROM ds_demo.EXTRATO
   LEFT OUTER JOIN ds_demo.INTELIGENT ON INTELIGENT.EXTRATO_ID=EXTRATO.ID
  WHERE EXTRATO.PARCEIRO_ID= pPAR_CODIGO
    AND EXTRATO.AGENCIABANCARIA_ID= pAGE_CODIGO
    AND EXTRATO.ID= pEXT_CODIGO
    AND INTELIGENT.EXTRATO_ID is null
  ORDER BY ID ;  

BEGIN 
  vRETORNO:= 0;  
   OPEN cEXTRATOBANCARIO;
  LOOP
  FETCH cEXTRATOBANCARIO INTO vCODIGEXTRATO, vDATAEXTRATO, vHISTORICO, vNUMERODOCUMENTO, vNUMEROCONTROLE, vDESCRICAO, vDEBITO, vCREDITO;
  EXIT WHEN NOT FOUND;
  IF vDEBITO < 0 THEN
   vDEBITO:= vDEBITO * (-1);
  END IF;
   vASSOCIADO      := FALSE; 
   INSERT INTO ds_demo.INTELIGENT ( extrato_id, parceiro_id, agenciabancaria_id, datalancamento,
                                    historico, NUMERODOCUMENTO, NUMEROCONTROLE, DEBITO, CREDITO, 
                                     periodo, associado
                                  )
                           VALUES ( vCODIGEXTRATO, pPAR_CODIGO, pAGE_CODIGO, vDATAEXTRATO,
                                    vHISTORICO, vNUMERODOCUMENTO, vNUMEROCONTROLE, vDEBITO, vCREDITO, 
                                    concat(extract(month from vDATAEXTRATO),extract(year from vDATAEXTRATO)), vASSOCIADO
                                  );
   
  vRETORNO:= vRETORNO + 1;
  END LOOP;
  CLOSE cEXTRATOBANCARIO;  

  RETURN COALESCE(vRETORNO ,0);

END;
$function$
;