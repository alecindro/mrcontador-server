CREATE OR REPLACE FUNCTION ds_demo.processa_comprovante("pCOM_CODIGO" bigint)
 RETURNS numeric
 LANGUAGE plpgsql
AS $function$
DECLARE
  pCOM_CODIGO ALIAS FOR $1;  
  
  vRETORNO NUMERIC;
  
  vCODIGEXTRATO NUMERIC;
  vDATAEXTRATO DATE;  
  vHISTORICO VARCHAR(150);
  vINFOADICIONAL VARCHAR(240);
  vNUMERODOCUMENTO VARCHAR(35);
  vNUMEROCONTROLE VARCHAR(35);
  vDESCRICAO VARCHAR(30);
  vDEBITO NUMERIC;
  vCREDITO NUMERIC;
  vCODIGOINTELIGENTE NUMERIC;
  
  REC   RECORD; 
  
  vCOMPROVANTE NUMERIC;
  vDETALHECOMP TEXT; 
  vCNPJ TEXT;
  vBENEFICIARIO TEXT;
  vDATAVENCIMENTO DATE;
  vVALORDOCUMENTO NUMERIC;  
  vVALORPAGAMENTO NUMERIC;
  vDATAPAGAMENTO DATE;
  vPARCEIROID NUMERIC;
  vAGENCIABANCARIAID NUMERIC;
  
  cEXTRATOBANCARIO CURSOR FOR
  SELECT COMPROVANTE.ID, COM_DOCUMENTO, COM_CNPJ, COM_BENEFICIARIO, COM_DATAVENCIMENTO, COM_VALORDOCUMENTO, COM_VALORPAGAMENTO, COM_DATAPAGAMENTO, PARCEIRO_ID, AGENCIABANCARIA_ID    
  FROM ds_demo.COMPROVANTE
  WHERE ID= pCOM_CODIGO;  
  
BEGIN
 
  vRETORNO:= 0;

  OPEN cEXTRATOBANCARIO;
  LOOP
  FETCH cEXTRATOBANCARIO INTO vCOMPROVANTE, vDETALHECOMP, vCNPJ, vBENEFICIARIO, vDATAVENCIMENTO, vVALORDOCUMENTO, vVALORPAGAMENTO, vDATAPAGAMENTO, vPARCEIROID, vAGENCIABANCARIAID;
  EXIT WHEN NOT FOUND;
        
   FOR REC IN
    SELECT  DISTINCT e.ID as extrato_id, EXT_DATALANCAMENTO, EXT_HISTORICO, EXT_NUMERODOCUMENTO, EXT_NUMEROCONTROLE, EXT_DESCRICAO, EXT_DEBITO, EXT_CREDITO, INFO_ADICIONAL, i.ID as inteligent_id
    FROM ds_demo.EXTRATO e
     INNER JOIN ds_demo.INTELIGENT i ON i.EXTRATO_ID=e.ID
    WHERE e.PARCEIRO_ID= vPARCEIROID
      AND e.AGENCIABANCARIA_ID= vAGENCIABANCARIAID
      AND i.ASSOCIADO= FALSE
      AND i.COMPROVANTE_ID is null    
    ORDER BY e.ID 
   LOOP

   vCODIGEXTRATO     := REC.extrato_id; 
   vDATAEXTRATO      := REC.EXT_DATALANCAMENTO; 
   vHISTORICO        := REC.EXT_HISTORICO;
   vNUMERODOCUMENTO  := REC.EXT_NUMERODOCUMENTO; 
   vNUMEROCONTROLE   := REC.EXT_NUMEROCONTROLE;
   vDESCRICAO        := REC.EXT_DESCRICAO; 
   vDEBITO           := REC.EXT_DEBITO; 
   vCREDITO          := REC.EXT_CREDITO; 
   vINFOADICIONAL    := REC.INFO_ADICIONAL; 
   vCODIGOINTELIGENTE:= REC.inteligent_id;

 IF (vDETALHECOMP = vNUMERODOCUMENTO) AND (vDATAPAGAMENTO = vDATAEXTRATO) AND (vVALORPAGAMENTO = vDEBITO*-1 ) THEN
     UPDATE ds_demo.INTELIGENT SET COMPROVANTE_ID= vCOMPROVANTE,CNPJ= vCNPJ,  BENEFICIARIO= vBENEFICIARIO WHERE ID = vCODIGOINTELIGENTE;
       vRETORNO:= vRETORNO + 1;
    END IF;
   END LOOP; 
   
 
  END LOOP;
  CLOSE cEXTRATOBANCARIO;
  

  RETURN COALESCE(vRETORNO ,0);

END;
$function$
;

